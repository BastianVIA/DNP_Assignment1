@page "/SearchAdult"
@using Models
@inject FileContext _fileContext
@using FileData

<h3>SearchAdult</h3>

<p> Filter by Firstname: <input type="text" @oninput="@((arg) => FilterByName(arg))" style="width:50px"/> </p>

@if (_adultList == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!_adultList.Any())
{
    <p>
        <em>No adults exist. Please add some.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Hair Color</th>
            <th>Eye Color</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>
            <th>Job Title</th>
            <th>Salary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (Adult adult in _adultListToShow)
        {
            <tr>
                <td>@adult.Id</td>
                <td>@adult.FirstName</td>
                <td>@adult.LastName</td>
                <td>@adult.HairColor</td>
                <td>@adult.EyeColor</td>
                <td>@adult.Age</td>
                <td>@adult.Weight</td>
                <td>@adult.Height</td>
                <td>@adult.Sex</td>
                <td>@adult.JobTitle.JobTitle</td>
                <td>@adult.JobTitle.Salary</td>
                <td>
                    <button @onclick="@(() => RemoveAdult(adult))">
                        <i class="oi oi-trash" style="color:red"/>
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    
    private IList<Adult> _adultList;
    private IList<Adult> _adultListToShow;
    private string _filterName;

    protected override async Task OnInitializedAsync()
    {
        _adultList = _fileContext.Adults;
        _adultListToShow = _adultList;
    }

    private void RemoveAdult(Adult adult)
    {
        _adultList.Remove(adult);
        _fileContext.SaveChanges(_adultList);
    }

    private void FilterByName(ChangeEventArgs changeEventArgs)
    {
        _filterName = changeEventArgs.Value?.ToString();
        ExecuteFilter(_filterName);
    }

    private void ExecuteFilter(string filterName)
    {
        IList<Adult> tempList = new List<Adult>();
        
        foreach (Adult adult in _adultList)
        {
            if (adult.FirstName.Contains(filterName))
            {
                tempList.Add(adult);
            }
        }
        _adultListToShow = tempList;
    }

}